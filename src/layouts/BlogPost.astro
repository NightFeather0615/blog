---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { unified } from 'unified'
import remarkParse from 'remark-parse'
import remarkRehype from 'remark-rehype'
import rehypeStringify from 'rehype-stringify'
import rehypeRaw from 'rehype-raw'
import rehypePrism from 'rehype-prism-plus'
import remarkGfm from 'remark-gfm'
import smartypants from 'remark-smartypants'
import { Image } from '@astrojs/image/components'

import '../styles/prism-nord.css'

export interface Props {
  postId: string
}

class PostData {
  constructor(
    public id: string,
    public title: string,
    public description: string,
    public thumbnail: string,
    public createdAt: string,
    public lastEditedAt: string,
    public tags: Array<string>,
    public content: string
  ) {}
}
const { postId } = Astro.props

const postData = await fetch(
  `https://nightfeather-blog-functions.netlify.app/.netlify/functions/fetch-post-by-id?id=${postId}`
).then(async response => {
  return (await response.json()) as PostData
})

const postContent = await unified()
  .use(remarkParse)
  .use(remarkGfm)
  .use(remarkRehype, { allowDangerousHtml: true })
  .use(rehypeRaw)
  .use(rehypeStringify)
  .use(rehypePrism)
  .use(smartypants)
  .process(postData.content)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={postData.title}
      description={postData.description}
      image={postData.thumbnail}
    />
  </head>

  <Body>
    <Header />
    <main class="pt-[60px]">
      <Content className="pt-6 leading-8">
        <div class="mb-8">
          {
            postData.thumbnail && (
              <Image
                class="border border-sky-200 dark:border-gray-800 rounded-xl transition-colors"
                fit="cover"
                format="webp"
                quality={100}
                width={720}
                height={360}
                src={postData.thumbnail}
                loading="eager"
                alt="Post Thumbnail"
              />
            )
          }
        </div>
        <div class="text-4xl my-1 font-semibold">{postData.title}</div>
        <div class="text-lg pt-1">{postData.description}</div>
        <ul class="flex gap-2.5 text-sm py-2">
          {
            postData.tags.map(tag => {
              return (
                <a
                  class="bg-sky-400 dark:bg-sky-500 hover:bg-sky-300 dark:hover:bg-sky-600 px-3 py-[0.2rem] rounded-full transition-colors"
                  href={`/tags/${tag}`}
                >
                  <li class="text-center items-center text-sky-50 dark:text-gray-900 font-semibold transition-colors">
                    {tag}
                  </li>
                </a>
              )
            })
          }
        </ul>
        <hr class="border-top border-gray-500 my-2" />
        <div class="pb-9">
          發布於 {
            new Date(postData.createdAt).toLocaleDateString('zh-TW')
          } • 最後修改於 {
            new Date(postData.lastEditedAt).toLocaleDateString('zh-TW')
          }
        </div>
        <article
          class="prose prose-base max-w-none dark:prose-invert dark:prose-headings:text-gray-200 prose-img:border prose-img:border-sky-200 dark:prose-img:border-gray-800 prose-img:rounded-xl prose-img:transition-colors prose-a:underline prose-a:underline-offset-2 hover:prose-a:text-sky-500 prose-a:decoration-sky-500 dark:hover:prose-a:text-sky-400 dark:prose-a:decoration-sky-400 prose-a:transition-colors prose-a:duration-50"
        >
          {postContent}
        </article>
      </Content>
    </main>
    <Footer />
  </Body>
</html>
